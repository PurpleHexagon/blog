{"version":3,"sources":["webpack:///./node_modules/has-scroll-hook/useHasScroll.js","webpack:///./plugins/gatsby-theme-sky-lite/src/templates/home.js"],"names":["hasScroll","Boolean","window","scrollY","_useState","_useState2","scroll","setScroll","onScroll","document","addEventListener","removeEventListener","Posts","posts","pathPrefix","Grid","container","spacing","map","node","excerpt","fileAbsolutePath","frontmatter","id","title","featuredImage","postDate","path","basename","split","splice","join","item","xs","sm","key","Card","url","HomeTemplate","data","site","siteMetadata","description","templates","allMdx","edges","useHasScroll","Layout","elevateAppBar","Box","display","flexDirection","textAlign","paddingTop","paddingBottom","paddingX","style","backgroundColor","theme","palette","primary","main","color","common","white","clipPath","marginBottom","Typography","variant","fontWeight","fontFamily","flexGrow","marginX","width","maxWidth","padding","length","justifyContent","marginTop","Button","component","Link","to","pageQuery"],"mappings":"sQAEW,EAAe,WAExB,IAAIA,EAAY,WACd,OAAOC,QAAQC,OAAOC,UAGpBC,EAAY,oBAAS,GACrBC,EAAa,YAAeD,EAAW,GACvCE,EAASD,EAAW,GACpBE,EAAYF,EAAW,GAiB3B,OAfA,qBAAU,WACR,IAAIG,EAAW,WAEbF,IAAWN,KAAeO,EAAUP,MAOtC,OAFAQ,IACAC,SAASC,iBAAiB,SAAUF,GAC7B,WAELC,SAASE,oBAAoB,SAAUH,MAExC,CAACF,EAAQC,IACLD,G,kFCnBT,IAAMM,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACpB,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBJ,EAAMK,KACH,YAMQ,IAAD,IALFC,KACIC,EAIF,EAJEA,QACAC,EAGF,EAHEA,iBAGF,IAFEC,YAAeC,EAEjB,EAFiBA,GAAIC,EAErB,EAFqBA,MAAOC,EAE5B,EAF4BA,cAGzBC,EAAWC,IACZC,SAASP,GACTQ,MAAM,KACNC,OAAO,EAAG,GACVC,KAAK,KACV,OACI,kBAAChB,EAAA,EAAD,CAAMiB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKZ,GAC3B,kBAACa,EAAA,EAAD,CACIX,cAAeA,EACfD,MAAOA,EACPa,IAAG,IAAMvB,EAAN,IAAoBS,EACvBG,SAAUA,EACVN,QAASA,UAU1B,SAASkB,EAAT,GAa0B,IAAD,IAZCC,KAYD,IAXKC,KACIC,aAEIC,GAQb,EATalB,MASb,EARakB,aAEa5B,EAM1B,EAPa6B,UACI9B,MAASC,WAIJD,EAEtB,EAFK+B,OAAUC,MAI7C7C,EAAY8C,IAElB,OACI,kBAACC,EAAA,EAAD,CAAQC,cAAehD,GACnB,kBAACiD,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,UAC9B,kBAACF,EAAA,EAAD,CACIG,UAAU,SACVC,WAAY,EACZC,cAAe,GACfC,SAAU,EACVC,MAAO,CACHC,gBAAiBC,IAAMC,QAAQC,QAAQC,KACvCC,MAAOJ,IAAMC,QAAQI,OAAOC,MAC5BC,SAAU,0CACV,oBAAqB,4CAKzB,kBAAChB,EAAA,EAAD,CAAKiB,aAAc,GACf,kBAACC,EAAA,EAAD,CACIL,MAAM,UACNM,QAAQ,KACRZ,MAAO,CACHa,WAAY,OACZC,WACI,mEACJJ,aAAc,IAPtB,kBAYA,kBAACC,EAAA,EAAD,CACIL,MAAM,UACNM,QAAQ,KACRZ,MAAO,CACHa,WAAY,OACZC,WACI,mEACJJ,aAAc,IAGjBxB,MAMjB,kBAACO,EAAA,EAAD,CAAKsB,SAAU,EAAGC,QAAQ,OAAOC,MAAM,OAAOC,SAAU,KACpD,kBAACzB,EAAA,EAAD,CAAK0B,QAAS,GACV,kBAAC,EAAD,CAAO9D,MAAOA,EAAOC,WAAYA,IAChCD,EAAM+D,OAAS,GACZ,kBAAC3B,EAAA,EAAD,CACIC,QAAQ,OACR2B,eAAe,WACfF,QAAS,EACTG,UAAW,GAEX,kBAACC,EAAA,EAAD,CACIX,QAAQ,YACRN,MAAM,YACNkB,UAAWC,IACXC,GAAE,IAAMpE,EAAN,WAJN,gBAgBrB,IAAMqE,EAAS","file":"component---plugins-gatsby-theme-sky-lite-src-templates-home-js-8b6d7cb720dcf288f20a.js","sourcesContent":["import _slicedToArray from \"/home/jon/code/my-themed-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useHasScroll = function useHasScroll() {\n  /* Check if the scrollbar has an offset. */\n  var hasScroll = function hasScroll() {\n    return Boolean(window.scrollY);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      scroll = _useState2[0],\n      setScroll = _useState2[1];\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      /* Update the state when the scroll position changes. */\n      scroll !== hasScroll() && setScroll(hasScroll());\n    };\n    /* Set the initial scroll state. */\n\n\n    onScroll();\n    document.addEventListener(\"scroll\", onScroll);\n    return function () {\n      /* Clean up the event listener. */\n      document.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [scroll, setScroll]);\n  return scroll;\n};","import React from \"react\";\nimport path from \"path\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport theme from \"../style/theme\";\nimport { useHasScroll } from \"has-scroll-hook\";\n\nconst Posts = ({ posts, pathPrefix }) => {\n    return (\n        <Grid container spacing={3}>\n            {posts.map(\n                ({\n                     node: {\n                         excerpt,\n                         fileAbsolutePath,\n                         frontmatter: { id, title, featuredImage }\n                     }\n                 }) => {\n                    const postDate = path\n                        .basename(fileAbsolutePath)\n                        .split(\"-\")\n                        .splice(0, 3)\n                        .join(\"-\");\n                    return (\n                        <Grid item xs={12} sm={4} key={id}>\n                            <Card\n                                featuredImage={featuredImage}\n                                title={title}\n                                url={`/${pathPrefix}/${id}`}\n                                postDate={postDate}\n                                excerpt={excerpt}\n                            />\n                        </Grid>\n                    );\n                }\n            )}\n        </Grid>\n    );\n};\n\nexport default function HomeTemplate({\n                                         data: {\n                                             site: {\n                                                 siteMetadata: {\n                                                     title,\n                                                     description,\n                                                     templates: {\n                                                         posts: { pathPrefix }\n                                                     }\n                                                 }\n                                             },\n                                             allMdx: { edges: posts }\n                                         }\n                                     }) {\n    /* Get the vertical scrollbar offset as a boolean value. */\n    const hasScroll = useHasScroll();\n\n    return (\n        <Layout elevateAppBar={hasScroll}>\n            <Box display=\"flex\" flexDirection=\"column\">\n                <Box\n                    textAlign=\"center\"\n                    paddingTop={0}\n                    paddingBottom={12}\n                    paddingX={8}\n                    style={{\n                        backgroundColor: theme.palette.primary.main,\n                        color: theme.palette.common.white,\n                        clipPath: \"polygon(0 0, 100% 0, 100% 60%, 0% 100%)\",\n                        \"-webkit-clip-path\": \"polygon(0 0, 100% 0, 100% 60%, 0% 100%)\"\n                    }}\n                >\n\n\n                    <Box marginBottom={4}>\n                        <Typography\n                            color=\"inherit\"\n                            variant=\"h4\"\n                            style={{\n                                fontWeight: \"bold\",\n                                fontFamily:\n                                    \"Work Sans, -apple-system, BlinkMacSystemFont, Roboto, sans-serif\",\n                                marginBottom: 4\n                            }}\n                        >\n                            Jon Day's Blog\n                        </Typography>\n                        <Typography\n                            color=\"inherit\"\n                            variant=\"h6\"\n                            style={{\n                                fontWeight: \"bold\",\n                                fontFamily:\n                                    \"Work Sans, -apple-system, BlinkMacSystemFont, Roboto, sans-serif\",\n                                marginBottom: 4\n                            }}\n                        >\n                            {description}\n                        </Typography>\n\n                    </Box>\n                </Box>\n            </Box>\n            <Box flexGrow={1} marginX=\"auto\" width=\"100%\" maxWidth={960}>\n                <Box padding={2}>\n                    <Posts posts={posts} pathPrefix={pathPrefix} />\n                    {posts.length > 1 && (\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"flex-end\"\n                            padding={1}\n                            marginTop={1}\n                        >\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                component={Link}\n                                to={`/${pathPrefix}/page/1`}\n                            >\n                                View All\n                            </Button>\n                        </Box>\n                    )}\n                </Box>\n            </Box>\n        </Layout>\n    );\n}\n\nexport const pageQuery = graphql`\n  query($limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n        templates {\n          posts {\n            pathPrefix\n          }\n        }\n      }\n    }\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/content/posts/\" } }\n      sort: { order: DESC, fields: [fileAbsolutePath] }\n      limit: $limit\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          fileAbsolutePath\n          frontmatter {\n            id\n            title\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}